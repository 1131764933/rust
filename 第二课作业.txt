use std::fs::{File,OpenOptions};
use std::io::{BufReader,BufRead,BufWriter,Write,Result};


fn write_file(file_name:&str) -> Result<()>{
    let mut file = File::create(file_name)?;
    
    for i in 0..33 {
        let start = i*3+1;
        let end = (i+1)*3;
        let line = (start..=end).map(|n| n.to_string()).collect::<Vec<String>>().join("");
        writeln!(file,"{}",line)?;
    }
    Ok(())
}
fn read_file(input_file:&str,output_file:&str) -> Result<()>{
    let infile = File::open(input_file)?;
    let outfile=OpenOptions::new()
        .write(true)
        .create(true)
        .truncate(true)
        .open(output_file)?;
    let reader = BufReader::new(&infile);
    let mut writer=BufWriter::new(&outfile);
    let mut lines:Vec<String> = reader.lines().map(|l| l.unwrap()).collect();
    lines.reverse();
    for line in lines{
        writeln!(writer,"{}",line)?;
    }
    Ok(())
}


fn main() -> Result<()>{
    let input_file ="a.txt";
    let output_file = "b.txt";
    write_file(input_file)?;
    read_file(input_file,output_file)?;
    Ok(()) 
}

